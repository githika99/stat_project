---
title: "model"
format: html
editor: visual
---

## PCA

```{r}
install.packages("tidyverse")
install.packages("ggplot2")
```

```{r}
library(tidyverse)
library(ggplot2)
```

```{r}
# --- State Data ---
state_data <- read_csv("./Project1/data/Processed_Data/State_Prison_Revenue.csv")
state_data <- state_data[!grepl("Total", state_data$`Prison Unit`, ignore.case = TRUE), ] #ignore all rows that include the word Total
state_data <- state_data %>% mutate(Type = "State")
numeric_state <- state_data %>% select(where(is.numeric))
scaled_state <- scale(state_data %>% select(tail(names(.), 4)))
pca_state <- prcomp(scaled_state, center = TRUE, scale. = TRUE)
state_scores <- as.data.frame(pca_state$x)
state_scores$Type <- "State"

# --- Private Data ---
private_data <- read_csv("./Project1/data/Processed_Data/Private_Prison_Revenue.csv")
private_data <- private_data[!grepl("Total", private_data$`Prison Unit`, ignore.case = TRUE), ] #ignore all rows that include the word Total
private_data <- private_data %>% mutate(Type = "Private")
numeric_priv <- private_data %>% select(where(is.numeric))
scaled_priv <- scale(numeric_priv %>% select(tail(names(.), 4)))
pca_priv <- prcomp(scaled_priv, center = TRUE, scale. = TRUE)
priv_scores <- as.data.frame(pca_priv$x)
priv_scores$Type <- "Private"

# Scree plot (variance explained)
plot(pca_state, type = "l", main = "Scree Plot for State Data")
plot(pca_priv, type = "l", main = "Scree Plot for Private Data")

print(pca_state)
print(pca_priv)

# --- Combine and Plot ---
combined_scores <- rbind(
  state_scores[, c("PC1", "PC2", "Type")],
  priv_scores[, c("PC1", "PC2", "Type")]
)

ggplot(combined_scores, aes(x = PC1, y = PC2, color = Type)) +
  geom_point(size = 3, alpha = 0.7) +
  labs(title = "PCA of State vs Private Prisons",
       x = "Principal Component 1",
       y = "Principal Component 2") +
  theme_minimal()


# Print out what is in each component
# Print loadings for PC1 and PC2 - State
cat("Top contributing features to PC1 (State):\n")
print(sort(abs(pca_state$rotation[,1]), decreasing = TRUE))

cat("\nTop contributing features to PC2 (State):\n")
print(sort(abs(pca_state$rotation[,2]), decreasing = TRUE))

# Print loadings for PC1 and PC2 - Private
cat("\nTop contributing features to PC1 (Private):\n")
print(sort(abs(pca_priv$rotation[,1]), decreasing = TRUE))

cat("\nTop contributing features to PC2 (Private):\n")
print(sort(abs(pca_priv$rotation[,2]), decreasing = TRUE))
```

## Individual Regression

```{r}
install.packages("tidyverse")
install.packages("broom")
install.packages("ggplot2")
install.packages("ggpubr")
install.packages("ggfortify")
```

```{r}
library(tidyverse)
library(broom)
library(ggplot2)
library(ggpubr)
library(ggfortify)
```

```{r}
# Load datasets
state_data <- read_csv("../Project1/data/Processed_Data/State_Prison_Revenue.csv")
state_data <- state_data[!grepl("Total", state_data$`Prison Unit`, ignore.case = TRUE), ] #ignore all rows that include the word Total
state_data <- state_data %>% mutate(Type = "State")

private_data <- read_csv("../Project1/data/Processed_Data/Private_Prison_Revenue.csv")
private_data <- private_data[!grepl("Total", private_data$`Prison Unit`, ignore.case = TRUE), ] #ignore all rows that include the word Total
private_data <- private_data %>% mutate(Type = "Private")
```

```{r}
s1 <- lm(`Annual Per Capita Cost - Direct` ~ ADP, data = state_data)
s2 <- lm(`Annual Per Capita Cost - Indirect` ~ ADP, data = state_data)
s3 <- lm(`Annual Per Capita Cost - Total` ~ ADP, data = state_data)
summary(s1)
summary(s2)
summary(s3)


p1 <- lm(`Annual Per Capita Cost - Direct` ~ ADP, data = private_data)
p2 <- lm(`Annual Per Capita Cost - Indirect` ~ ADP, data = private_data)
p3 <- lm(`Annual Per Capita Cost - Total` ~ ADP, data = private_data)
summary(p1)
summary(p2)
summary(p3)
```

```{r}
plot_regression <- function(data, model, yvar, title) {
  ggplot(data, aes(x = ADP, y = !!sym(yvar))) +
    geom_point(alpha = 0.7) +
    geom_smooth(method = "lm", se = TRUE, color = "blue") +
    labs(title = title, x = "Average Daily Population (ADP)", y = yvar) +
    theme_minimal()
}

# Generate plots
p_direct <- plot_regression(private_data, p1, "Annual Per Capita Cost - Direct", "Private: Direct Cost vs ADP")
s_direct <- plot_regression(state_data, s1, "Annual Per Capita Cost - Direct", "State: Direct Cost vs ADP")
p_total <- plot_regression(private_data, p2, "Annual Per Capita Cost - Indirect", "Private: Indirect Cost vs ADP")
s_total <- plot_regression(state_data, s2, "Annual Per Capita Cost - Indirect", "State: Indirect Cost vs ADP")

# Display
ggarrange(p_direct, s_direct, p_total, s_total, ncol = 2, nrow = 2)

# Diagnostic plots for State and Private models
autoplot(p1, label.size = 3) + ggtitle("Private: Direct Cost Diagnostics")
autoplot(s1, label.size = 3) + ggtitle("State: Direct Cost Diagnostics")

bind_rows(
  tidy(p1) %>% mutate(model = "Private Direct"),
  tidy(s1) %>% mutate(model = "State Direct"),
  tidy(p3) %>% mutate(model = "Private Total"),
  tidy(s3) %>% mutate(model = "State Total")
) %>%
  select(model, term, estimate, std.error, p.value) %>%
  knitr::kable(digits = 3)
```

## Combined Regression

```{r}
install.packages(c("aod", "ggplot2", "tidyverse"))
```

```{r}
library(aod)
library(ggplot2)
library(tidyverse)
```

```{r}
# --- Load and label datasets ---
state_dataset <- read_csv("./Project1/data/Processed_Data/State_Prison_Revenue.csv") %>%
  filter(!grepl("Total", `Prison Unit`, ignore.case = TRUE)) %>%
  mutate(Type = "State")

private_dataset <- read_csv("./Project1/data/Processed_Data/Private_Prison_Revenue.csv") %>%
  filter(!grepl("Total", `Prison Unit`, ignore.case = TRUE)) %>%
  mutate(Type = "Private")

# --- Combine datasets ---
combined_data <- bind_rows(state_dataset, private_dataset)
```

```{r}
# Rename columns to remove spaces for easier handling in ggplot
combined_data <- combined_data %>%
  rename(
    Annual_Per_Capita_Cost_Direct = `Annual Per Capita Cost - Direct`,
    Annual_Per_Capita_Cost_Indirect = `Annual Per Capita Cost - Indirect`
  )

# Create binary outcome: 1 = Private, 0 = State
combined_data <- combined_data %>%
  mutate(PrivateBinary = ifelse(Type == "Private", 1, 0))

# --- Logistic Regression: Direct Cost Only ---
model_direct <- glm(PrivateBinary ~ Annual_Per_Capita_Cost_Direct, 
                    data = combined_data, 
                    family = "binomial")

# Predict probabilities across range of direct costs
cost_direct_seq <- seq(min(combined_data$Annual_Per_Capita_Cost_Direct),
                       max(combined_data$Annual_Per_Capita_Cost_Direct), 
                       length.out = 100)

direct_plot_df <- data.frame(Annual_Per_Capita_Cost_Direct = cost_direct_seq)
direct_plot_df$prob <- predict(model_direct, newdata = direct_plot_df, type = "response")

# --- Logistic Regression: Indirect Cost Only ---
model_indirectADP <- glm(PrivateBinary ~ ADP, 
                      data = combined_data, 
                      family = "binomial")

# Predict probabilities across range of indirect costs
cost_indirect_seq <- seq(min(combined_data$Annual_Per_Capita_Cost_Indirect),
                         max(combined_data$Annual_Per_Capita_Cost_Indirect), 
                         length.out = 100)

indirect_plot_df <- data.frame(Annual_Per_Capita_Cost_Indirect = cost_indirect_seq)
indirect_plot_df$prob <- predict(model_indirect, newdata = indirect_plot_df, type = "response")
```

```{r}
# --- Plot for Direct Cost ---
ggplot() +
  geom_point(data = combined_data,
             aes(x = Annual_Per_Capita_Cost_Direct, y = PrivateBinary, color = Type),
             alpha = 0.6) +
  geom_line(data = direct_plot_df,
            aes(x = Annual_Per_Capita_Cost_Direct, y = prob),
            color = "black", linewidth = 1.2) +
  labs(title = "Probability of Private Prison by Direct Cost",
       x = "Annual Per Capita Cost - Direct",
       y = "Predicted Probability of Being Private") +
  theme_minimal()

# --- Plot for Indirect Cost ---
ggplot() +
  geom_point(data = combined_data,
             aes(x = Annual_Per_Capita_Cost_Indirect, y = PrivateBinary, color = Type),
             alpha = 0.6) +
  geom_line(data = indirect_plot_df,
            aes(x = Annual_Per_Capita_Cost_Indirect, y = prob),
            color = "black", linewidth = 1.2) +
  labs(title = "Probability of Private Prison by Indirect Cost",
       x = "Annual Per Capita Cost - Indirect",
       y = "Predicted Probability of Being Private") +
  theme_minimal()

summary(model_direct)
summary(model_indirect)
```
